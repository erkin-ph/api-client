/*
 * deposits/transactions
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.mambu.sdk.model.v2;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Represents the request payload for creating a transaction of type DEPOSIT.
 */
@ApiModel(description = "Represents the request payload for creating a transaction of type DEPOSIT.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-16T09:34:36.124Z")
public class DepositTransactionInput {
    @SerializedName("externalId")
    private String externalId = null;

    @SerializedName("paymentOrderId")
    private String paymentOrderId = null;

    @SerializedName("valueDate")
    private OffsetDateTime valueDate = null;

    @SerializedName("bookingDate")
    private OffsetDateTime bookingDate = null;

    @SerializedName("amount")
    private BigDecimal amount = null;

    @SerializedName("notes")
    private String notes = null;

    @SerializedName("transactionDetails")
    private TransactionDetailsInput transactionDetails = null;

    public DepositTransactionInput externalId(String externalId) {
        this.externalId = externalId;
        return this;
    }

    /**
     * The external id of the deposit transaction, customizable, unique
     *
     * @return externalId
     **/
    @ApiModelProperty(value = "The external id of the deposit transaction, customizable, unique")
    public String getExternalId() {
        return externalId;
    }

    public void setExternalId(String externalId) {
        this.externalId = externalId;
    }

    public DepositTransactionInput paymentOrderId(String paymentOrderId) {
        this.paymentOrderId = paymentOrderId;
        return this;
    }

    /**
     * The payment order id of the deposit transaction, customizable
     *
     * @return paymentOrderId
     **/
    @ApiModelProperty(value = "The payment order id of the deposit transaction, customizable")
    public String getPaymentOrderId() {
        return paymentOrderId;
    }

    public void setPaymentOrderId(String paymentOrderId) {
        this.paymentOrderId = paymentOrderId;
    }

    public DepositTransactionInput valueDate(OffsetDateTime valueDate) {
        this.valueDate = valueDate;
        return this;
    }

    /**
     * The entry date of the deposit (as Organization Time)
     *
     * @return valueDate
     **/
    @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The entry date of the deposit (as Organization Time)")
    public OffsetDateTime getValueDate() {
        return valueDate;
    }

    public void setValueDate(OffsetDateTime valueDate) {
        this.valueDate = valueDate;
    }

    public DepositTransactionInput bookingDate(OffsetDateTime bookingDate) {
        this.bookingDate = bookingDate;
        return this;
    }

    /**
     * The date of Journal Entry (as Organization Time)
     *
     * @return bookingDate
     **/
    @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The date of Journal Entry (as Organization Time)")
    public OffsetDateTime getBookingDate() {
        return bookingDate;
    }

    public void setBookingDate(OffsetDateTime bookingDate) {
        this.bookingDate = bookingDate;
    }

    public DepositTransactionInput amount(BigDecimal amount) {
        this.amount = amount;
        return this;
    }

    /**
     * The amount that was added to an account
     *
     * @return amount
     **/
    @ApiModelProperty(required = true, value = "The amount that was added to an account")
    public BigDecimal getAmount() {
        return amount;
    }

    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    public DepositTransactionInput notes(String notes) {
        this.notes = notes;
        return this;
    }

    /**
     * Extra notes about this deposit transaction
     *
     * @return notes
     **/
    @ApiModelProperty(value = "Extra notes about this deposit transaction")
    public String getNotes() {
        return notes;
    }

    public void setNotes(String notes) {
        this.notes = notes;
    }

    public DepositTransactionInput transactionDetails(TransactionDetailsInput transactionDetails) {
        this.transactionDetails = transactionDetails;
        return this;
    }

    /**
     * Contains the details about transaction including fields like transaction channel key and channel id
     *
     * @return transactionDetails
     **/
    @ApiModelProperty(value = "Contains the details about transaction including fields like transaction channel key and channel id")
    public TransactionDetailsInput getTransactionDetails() {
        return transactionDetails;
    }

    public void setTransactionDetails(TransactionDetailsInput transactionDetails) {
        this.transactionDetails = transactionDetails;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DepositTransactionInput depositTransactionInput = (DepositTransactionInput) o;
        return Objects.equals(this.externalId, depositTransactionInput.externalId) &&
                Objects.equals(this.paymentOrderId, depositTransactionInput.paymentOrderId) &&
                Objects.equals(this.valueDate, depositTransactionInput.valueDate) &&
                Objects.equals(this.bookingDate, depositTransactionInput.bookingDate) &&
                Objects.equals(this.amount, depositTransactionInput.amount) &&
                Objects.equals(this.notes, depositTransactionInput.notes) &&
                Objects.equals(this.transactionDetails, depositTransactionInput.transactionDetails);
    }

    @Override
    public int hashCode() {
        return Objects.hash(externalId, paymentOrderId, valueDate, bookingDate, amount, notes, transactionDetails);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DepositTransactionInput {\n");

        sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
        sb.append("    paymentOrderId: ").append(toIndentedString(paymentOrderId)).append("\n");
        sb.append("    valueDate: ").append(toIndentedString(valueDate)).append("\n");
        sb.append("    bookingDate: ").append(toIndentedString(bookingDate)).append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
        sb.append("    transactionDetails: ").append(toIndentedString(transactionDetails)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}


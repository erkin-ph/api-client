/*
 * deposits/transactions
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.mambu.sdk.model.v2;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Represents the input for a transfer deposit transaction.
 */
@ApiModel(description = "Represents the input for a transfer deposit transaction.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-16T09:34:36.124Z")
public class TransferDepositTransactionInput {
    @SerializedName("externalId")
    private String externalId = null;

    @SerializedName("paymentOrderId")
    private String paymentOrderId = null;

    @SerializedName("valueDate")
    private OffsetDateTime valueDate = null;

    @SerializedName("amount")
    private BigDecimal amount = null;

    @SerializedName("transferDetails")
    private TransferDetailsInput transferDetails = null;

    @SerializedName("notes")
    private String notes = null;

    public TransferDepositTransactionInput externalId(String externalId) {
        this.externalId = externalId;
        return this;
    }

    /**
     * The external id of the transfer transaction, customizable, unique
     *
     * @return externalId
     **/
    @ApiModelProperty(value = "The external id of the transfer transaction, customizable, unique")
    public String getExternalId() {
        return externalId;
    }

    public void setExternalId(String externalId) {
        this.externalId = externalId;
    }

    public TransferDepositTransactionInput paymentOrderId(String paymentOrderId) {
        this.paymentOrderId = paymentOrderId;
        return this;
    }

    /**
     * The payment order id of the transfer transaction, customizable
     *
     * @return paymentOrderId
     **/
    @ApiModelProperty(value = "The payment order id of the transfer transaction, customizable")
    public String getPaymentOrderId() {
        return paymentOrderId;
    }

    public void setPaymentOrderId(String paymentOrderId) {
        this.paymentOrderId = paymentOrderId;
    }

    public TransferDepositTransactionInput valueDate(OffsetDateTime valueDate) {
        this.valueDate = valueDate;
        return this;
    }

    /**
     * The entry date of the transfer. If not specified it is considered the current date (as Organization Time)
     *
     * @return valueDate
     **/
    @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The entry date of the transfer. If not specified it is considered the current date (as Organization Time)")
    public OffsetDateTime getValueDate() {
        return valueDate;
    }

    public void setValueDate(OffsetDateTime valueDate) {
        this.valueDate = valueDate;
    }

    public TransferDepositTransactionInput amount(BigDecimal amount) {
        this.amount = amount;
        return this;
    }

    /**
     * The amount to transfer from account
     *
     * @return amount
     **/
    @ApiModelProperty(required = true, value = "The amount to transfer from account")
    public BigDecimal getAmount() {
        return amount;
    }

    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    public TransferDepositTransactionInput transferDetails(TransferDetailsInput transferDetails) {
        this.transferDetails = transferDetails;
        return this;
    }

    /**
     * The amount to transfer from account
     *
     * @return transferDetails
     **/
    @ApiModelProperty(required = true, value = "The amount to transfer from account")
    public TransferDetailsInput getTransferDetails() {
        return transferDetails;
    }

    public void setTransferDetails(TransferDetailsInput transferDetails) {
        this.transferDetails = transferDetails;
    }

    public TransferDepositTransactionInput notes(String notes) {
        this.notes = notes;
        return this;
    }

    /**
     * Extra notes about this deposit transaction
     *
     * @return notes
     **/
    @ApiModelProperty(value = "Extra notes about this deposit transaction")
    public String getNotes() {
        return notes;
    }

    public void setNotes(String notes) {
        this.notes = notes;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TransferDepositTransactionInput transferDepositTransactionInput = (TransferDepositTransactionInput) o;
        return Objects.equals(this.externalId, transferDepositTransactionInput.externalId) &&
                Objects.equals(this.paymentOrderId, transferDepositTransactionInput.paymentOrderId) &&
                Objects.equals(this.valueDate, transferDepositTransactionInput.valueDate) &&
                Objects.equals(this.amount, transferDepositTransactionInput.amount) &&
                Objects.equals(this.transferDetails, transferDepositTransactionInput.transferDetails) &&
                Objects.equals(this.notes, transferDepositTransactionInput.notes);
    }

    @Override
    public int hashCode() {
        return Objects.hash(externalId, paymentOrderId, valueDate, amount, transferDetails, notes);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TransferDepositTransactionInput {\n");

        sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
        sb.append("    paymentOrderId: ").append(toIndentedString(paymentOrderId)).append("\n");
        sb.append("    valueDate: ").append(toIndentedString(valueDate)).append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("    transferDetails: ").append(toIndentedString(transferDetails)).append("\n");
        sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

